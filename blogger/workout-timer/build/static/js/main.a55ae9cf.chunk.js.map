{"version":3,"sources":["components/timer/timer.js","App.js","index.js"],"names":["Timer","useState","play","setPlay","hour","setHour","minute","setMinute","second","setSecond","timeId","useParams","useEffect","interval","setInterval","parseInt","clearInterval","className","onClick","icon","faPause","faPlay","baseURL","TimeId","history","useHistory","createTimeId","localStorage","setItem","console","log","push","goToTimeId","setTimeId","type","value","onChange","event","target","getItem","to","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAMe,SAASA,IAAS,IAAD,EACJC,oBAAS,GADL,mBACrBC,EADqB,KACfC,EADe,OAEJF,mBAAS,MAFL,mBAErBG,EAFqB,KAEfC,EAFe,OAGAJ,mBAAS,MAHT,mBAGrBK,EAHqB,KAGbC,EAHa,OAIAN,mBAAS,MAJT,mBAIrBO,EAJqB,KAIbC,EAJa,KAKtBC,EAAWC,cAAXD,OAwBN,OAtBAE,qBAAU,WACN,IAAa,IAATV,EAAe,CACf,IAAMW,EAAWC,aACb,WACIL,GAAU,SAAAD,GACN,OAAe,KAAXA,GACAD,GAAU,SAAAD,GACN,OAAe,KAAXA,GACAD,GAAQ,SAAAD,GAAI,OAAIW,SAASX,GAAQ,EAAI,KAAMW,SAASX,GAAQ,GAAKW,SAASX,GAAQ,KAC3E,MAEJW,SAAST,GAAU,EAAI,KAAQS,SAAST,GAAS,GAAMS,SAAST,GAAU,KAE9E,MAEJS,SAASP,GAAU,EAAI,KAAOO,SAASP,GAAU,GAAKO,SAASP,GAAU,OAErF,KACP,OAAO,kBAAMQ,cAAcH,OAEhC,CAACX,IAGA,yBAAKe,UAAU,SACX,wCAAa,0BAAMA,UAAU,UAAUP,IACvC,uBAAGO,UAAU,QACT,0BAAMA,UAAU,QAAQb,EAAxB,KACA,0BAAMa,UAAU,UAAUX,EAA1B,KACA,0BAAMW,UAAU,UAAUT,IAG1BN,EAEI,4BAAQe,UAAU,QAAQC,QAAS,kBAAMf,GAAQ,KAAS,kBAAC,IAAD,CAAiBgB,KAAMC,OAEjF,4BAAQH,UAAU,OAAOC,QAAS,kBAAMf,GAAQ,KAAQ,kBAAC,IAAD,CAAiBgB,KAAME,Q,iBCrC7FC,EAAU,gCAEhB,SAASC,IACP,IAAMC,EAAUC,cAMhB,SAASC,EAAahB,GACpBiB,aAAaC,QAAQlB,EAAQ,MAC7BmB,QAAQC,IAAI,mBANd,SAAoBpB,GAClBc,EAAQO,KAAKT,EAAQ,SAASZ,GAM9BsB,CAAWtB,GAVG,MAaYT,mBAAS,IAbrB,mBAaTS,EAbS,KAaDuB,EAbC,KAchB,OACE,6BACE,2CACA,2BAAOC,KAAK,OAAOC,MAAOzB,EAAQ0B,SAAU,SAACC,GAAD,OAAWJ,EAAUI,EAAMC,OAAOH,UAE5ER,aAAaY,QAAQ7B,GAGjB,6BACE,yEACA,kBAAC,IAAD,CAAM8B,GAAIlB,EAAQ,SAAWZ,GAC3B,4BAAQO,UAAU,WAAWC,QAAS,kBAAMW,QAAQC,IAAIpB,KAAxD,gBAKK,OAAXA,GAA8B,KAAXA,EAGf,uEAIA,6BACE,kFACA,4BAAQO,UAAU,WAAWC,QAAS,kBAAMQ,EAAahB,KAAzD,kBAwBD+B,MAhBf,WACE,OACE,yBAAKxB,UAAU,WACb,4CACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyB,OAAK,EAACC,KAAMrB,GACjB,kBAACC,EAAD,OAEF,kBAAC,IAAD,CAAOmB,OAAK,EAACC,KAAMrB,EAAQ,gBAAiBsB,UAAW5C,QCjEjE6C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a55ae9cf.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPlay, faPause } from '@fortawesome/free-solid-svg-icons'\r\nimport './timer.scss'\r\n\r\nexport default function Timer() {\r\n    const [play, setPlay] = useState(false)\r\n    const [hour, setHour] = useState('00')\r\n    const [minute, setMinute] = useState('00')\r\n    const [second, setSecond] = useState('00')\r\n    let { timeId } = useParams()\r\n\r\n    useEffect(() => {\r\n        if (play === true) {\r\n            const interval = setInterval(\r\n                () => {\r\n                    setSecond(second => {\r\n                        if (second === 59) {\r\n                            setMinute(minute => {\r\n                                if (minute === 59) {\r\n                                    setHour(hour => parseInt(hour) < 9 ? '0'+ (parseInt(hour) + 1) : parseInt(hour) + 1)\r\n                                    return '00'\r\n                                }\r\n                                return parseInt(minute) < 9 ? '0' +  (parseInt(minute) +1 ) : parseInt(minute) + 1\r\n                            })\r\n                            return '00'\r\n                        }\r\n                        return parseInt(second) < 9 ? '0' + (parseInt(second) + 1) : parseInt(second) + 1\r\n                    })\r\n                }, 1000)\r\n            return () => clearInterval(interval)\r\n        }\r\n    }, [play])\r\n\r\n    return (\r\n        <div className=\"timer\">\r\n            <h3>Timer id <span className=\"timeId\">{timeId}</span></h3>\r\n            <p className=\"time\">\r\n                <span className=\"hour\">{hour}:</span>\r\n                <span className=\"minute\">{minute}:</span>\r\n                <span className=\"second\">{second}</span>\r\n            </p>\r\n            {\r\n                play\r\n                    ?\r\n                    <button className=\"pause\" onClick={() => setPlay(false)}>{<FontAwesomeIcon icon={faPause} />}</button>\r\n                    :\r\n                    <button className=\"play\" onClick={() => setPlay(true)}>{<FontAwesomeIcon icon={faPlay} />}</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Timer from './components/timer/timer'\r\nimport './App.scss';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nconst baseURL = '/blogger/workout-timer/build/'\r\n// It's setting a state called timeId, and it default value is ''\r\nfunction TimeId() {\r\n  const history = useHistory()\r\n\r\n  function goToTimeId(timeId){\r\n    history.push(baseURL+'timer/'+timeId)\r\n  }\r\n\r\n  function createTimeId(timeId) {\r\n    localStorage.setItem(timeId, '{}')\r\n    console.log('Time id created')\r\n    goToTimeId(timeId)\r\n  }\r\n\r\n  const [timeId, setTimeId] = useState('')\r\n  return (\r\n    <div>\r\n      <label>Time id:</label>\r\n      <input type=\"text\" value={timeId} onChange={(event) => setTimeId(event.target.value)} />\r\n      {\r\n        localStorage.getItem(timeId) // If localStorage with key timeid find\r\n          ?\r\n          (\r\n            <div>\r\n              <small>Time id found. Do you want do load it?</small>\r\n              <Link to={baseURL+\"timer/\" + timeId}>\r\n                <button className=\"btn-main\" onClick={() => console.log(timeId)}>Load Timer</button>\r\n              </Link>\r\n            </div>\r\n          )\r\n          : // Else localStorage with key timeid find\r\n          timeId === null || timeId === '' // If timeId null or ''\r\n            ?\r\n            (\r\n              <small>You must type a key for your time id</small>\r\n            )\r\n            : // else timeId null or ''\r\n            (\r\n              <div>\r\n                <small>Time id don't found. Do you want to create one?</small>\r\n                <button className=\"btn-main\" onClick={() => createTimeId(timeId)}>Create Timer</button>\r\n              </div>\r\n            )\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"appMain\">\r\n      <h1>Time Workout</h1>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path={baseURL}>\r\n            <TimeId />\r\n          </Route>\r\n          <Route exact path={baseURL+'timer/:timeId'} component={Timer} />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}